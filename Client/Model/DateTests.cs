/*
 * WebApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = OpenApiGeneratorTest.WebApi.Client.Client.OpenAPIDateConverter;

namespace OpenApiGeneratorTest.WebApi.Client.Model
{
    /// <summary>
    /// DateTests
    /// </summary>
    [DataContract(Name = "DateTests")]
    public partial class DateTests : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DateTests" /> class.
        /// </summary>
        /// <param name="dateTimeOffset">dateTimeOffset.</param>
        /// <param name="dateTime">dateTime.</param>
        /// <param name="dateOnly">dateOnly.</param>
        public DateTests(DateTimeOffset? dateTimeOffset = default(DateTimeOffset?), DateTimeOffset? dateTime = default(DateTimeOffset?), DateOnly dateOnly = default(DateOnly))
        {
            this.DateTimeOffset = dateTimeOffset;
            this.DateTime = dateTime;
            this.DateOnly = dateOnly;
        }

        /// <summary>
        /// Gets or Sets DateTimeOffset
        /// </summary>
        [DataMember(Name = "dateTimeOffset", EmitDefaultValue = true)]
        public DateTimeOffset? DateTimeOffset { get; set; }

        /// <summary>
        /// Gets or Sets DateTime
        /// </summary>
        [DataMember(Name = "dateTime", EmitDefaultValue = true)]
        public DateTimeOffset? DateTime { get; set; }

        /// <summary>
        /// Gets or Sets DateOnly
        /// </summary>
        [DataMember(Name = "dateOnly", EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateOnly DateOnly { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DateTests {\n");
            sb.Append("  DateTimeOffset: ").Append(DateTimeOffset).Append("\n");
            sb.Append("  DateTime: ").Append(DateTime).Append("\n");
            sb.Append("  DateOnly: ").Append(DateOnly).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
